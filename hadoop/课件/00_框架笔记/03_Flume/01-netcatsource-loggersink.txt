一、案例一

1.使用的组件类型
①netcat source:  作用就是监听某个tcp端口手动的数据，将每行数据封装为一个event
		         工作原理类似于nc -l 端口，监听端口的变化
				 在另外的机器上可以向这个机器的44444端口，发送数据
		
配置：
	必须属性：
	type	–	The component type name, needs to be netcat
	bind	–	Host name or IP address to bind to
	port	–	Port # to bind to
	
②logger sink: 作用使用logger(日志输出器)将event输出到文件或控制台,使用info级别记录event!
	必须属性：type	–	The component type name, needs to be logger
	可选属性：maxBytesToLog	16 Maximum number of bytes of the Event body to log

③memery channel
	必须属性：type	–	The component type name, needs to be memory
	可选属性：
		capacity	100	The maximum number of events stored in the channel
		transactionCapacity	100	The maximum number of events the channel will take from a source or give to a sink per transaction
	
2.编写配置文件
#a1是agent的名称，a1中定义了一个叫r1的source，如果有多个，使用空格间隔
a1.sources=r1
a1.sinks=k1
a1.channels=c1

#组名名.属性名=属性值 绑定Hadoop103上的44444端口 在别的机器上可以使用nc hadoop103 44444 发送数据
a1.sources.r1.type=netcat
a1.sources.r1.bind=hadoop103
a1.sources.r1.port=44444

#定义sink
a1.sinks.k1.type=logger
a1.sinks.k1.maxBytesToLog=100

#定义chanel
a1.channels.c1.type=memory
a1.channels.c1.capacity=1000

#连接组件 同一个source可以对接多个channel，一个sink只能从一个channel拿数据！
a1.sources.r1.channels=c1
a1.sinks.k1.channel=c1

①定义当前配置文件中agent以及source,sink,channel它们的别名
②指定source和channel和sink等组件的类型以及必须配置
③指定对应关系

// 启动一个进程监听端口
flume-ng agent -n a1 -c conf/ -f myagents/netcatsource-loggersink.conf	-Dflume.root.logger=DEBUG,console
	

